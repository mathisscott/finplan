{
  "version": 3,
  "sources": ["../../../app/routes/_layout.signup.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_layout.signup.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_layout.signup.tsx\");\n  import.meta.hot.lastModified = \"1710254069886.8884\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@remix-run/node';\nimport { useActionData, useNavigation } from '@remix-run/react';\nimport { Button } from '~/components/buttons';\nimport { Card } from '~/components/containers';\nimport { Form, Input } from '~/components/forms';\nimport { H1 } from '~/components/headings';\nimport { InlineError } from '~/components/texts';\nimport { createUserSession, getUserId, registerUser } from '~/modules/session/session.server';\nexport const meta = () => {\n  return [{\n    title: 'Sign Up | Financial Planner'\n  }, {\n    name: 'description',\n    content: 'Sign up for an account to track your expenses and income.'\n  }];\n};\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const {\n    name,\n    email,\n    password\n  } = Object.fromEntries(formData);\n  if (!name || !email || !password) {\n    return json({\n      error: 'Please fill out all fields.'\n    });\n  }\n  if (typeof name !== 'string' || typeof email !== 'string' || typeof password !== 'string') {\n    throw new Error('Invalid form data.');\n  }\n  try {\n    const user = await registerUser({\n      name,\n      email,\n      password\n    });\n    return redirect('/dashboard', {\n      headers: await createUserSession(user)\n    });\n  } catch (error) {\n    return json({\n      error: error?.message || 'Something went wrong.'\n    });\n  }\n}\nexport async function loader({\n  request\n}) {\n  const userId = await getUserId(request);\n  if (userId) {\n    return redirect('/dashboard');\n  }\n  return {};\n}\nexport default function Component() {\n  _s();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state !== 'idle' && navigation.formAction === '/signup';\n  const actionData = useActionData();\n  return <Card>\n      <Form method=\"POST\" action=\"/signup\">\n        <H1>Sign Up</H1>\n        <Input label=\"Name:\" name=\"name\" required />\n        <Input label=\"Email:\" name=\"email\" type=\"email\" required />\n        <Input label=\"Password:\" name=\"password\" type=\"password\" required />\n        <Button disabled={isSubmitting} type=\"submit\" isPrimary>\n          {isSubmitting ? 'Signing you up...' : 'Sign up!'}\n        </Button>\n        <InlineError aria-live=\"assertive\">{actionData?.error && actionData.error}</InlineError>\n      </Form>\n    </Card>;\n}\n_s(Component, \"1AETIiPCWpdcL3+sPGUbmCFrInE=\", false, function () {\n  return [useNavigation, useActionData];\n});\n_c = Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAO/B,qBAA2D;AAyDnD;AApFR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAWO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AA0Ce,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,eAAe,WAAW,UAAU,UAAU,WAAW,eAAe;AAC9E,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,QACJ,6DAAC,QAAK,QAAO,QAAO,QAAO,WACzB;AAAA,uDAAC,MAAG,uBAAJ;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,IACX,mDAAC,SAAM,OAAM,SAAQ,MAAK,QAAO,UAAQ,QAAzC;AAAA;AAAA;AAAA;AAAA,WAA0C;AAAA,IAC1C,mDAAC,SAAM,OAAM,UAAS,MAAK,SAAQ,MAAK,SAAQ,UAAQ,QAAxD;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACzD,mDAAC,SAAM,OAAM,aAAY,MAAK,YAAW,MAAK,YAAW,UAAQ,QAAjE;AAAA;AAAA;AAAA;AAAA,WAAkE;AAAA,IAClE,mDAAC,UAAO,UAAU,cAAc,MAAK,UAAS,WAAS,MACpD,yBAAe,sBAAsB,cADxC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,eAAY,aAAU,aAAa,sBAAY,SAAS,WAAW,SAApE;AAAA;AAAA;AAAA;AAAA,WAA0E;AAAA,OAR5E;AAAA;AAAA;AAAA;AAAA,SASA,KAVG;AAAA;AAAA;AAAA;AAAA,SAWL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
