{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.expenses.$id._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.expenses.$id._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.expenses.$id._index.tsx\");\n  import.meta.hot.lastModified = \"1706322488000\";\n}\n// REMIX HMR END\n\nimport { json, redirect, unstable_parseMultipartFormData } from '@remix-run/node';\nimport { isRouteErrorResponse, useActionData, useLoaderData, useNavigation, useParams, useRouteError } from '@remix-run/react';\nimport { Button } from '~/components/buttons';\nimport { Attachment, Form, Input, Textarea } from '~/components/forms';\nimport { H2 } from '~/components/headings';\nimport { FloatingActionLink } from '~/components/links';\nimport { uploadHandler } from '~/modules/attachments.server';\nimport { db } from '~/modules/db.server';\nimport { deleteExpense, parseExpense, removeAttachmentFromExpense, updateExpense } from '~/modules/expenses.server';\nimport { requireUserId } from '~/modules/session/session.server';\nasync function handleDelete(request, id, userId) {\n  const referer = request.headers.get('referer');\n  const redirectPath = referer || '/dashboard/expenses';\n  try {\n    await deleteExpense(id, userId);\n  } catch (err) {\n    return json({\n      success: false\n    });\n  }\n  if (redirectPath.includes(id)) {\n    return redirect('/dashboard/expenses');\n  }\n  return redirect(redirectPath);\n}\nasync function handleUpdate(formData, id, userId) {\n  const expenseData = parseExpense(formData);\n  await updateExpense({\n    id,\n    userId,\n    ...expenseData\n  });\n  return json({\n    success: true\n  });\n}\nasync function handleRemoveAttachment(formData, id, userId) {\n  const attachmentUrl = formData.get('attachmentUrl');\n  if (!attachmentUrl || typeof attachmentUrl !== 'string') {\n    throw Error('something went wrong');\n  }\n  const fileName = attachmentUrl.split('/').pop();\n  if (!fileName) throw Error('something went wrong');\n  await removeAttachmentFromExpense(id, userId, fileName);\n  return json({\n    success: true\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const userId = await requireUserId(request);\n  const {\n    id\n  } = params;\n  if (!id) throw Error('id route parameter must be defined');\n  let formData;\n  const contentType = request.headers.get('content-type');\n  if (contentType?.toLowerCase().includes('multipart/form-data')) {\n    formData = await unstable_parseMultipartFormData(request, uploadHandler);\n  } else {\n    formData = await request.formData();\n  }\n  const intent = formData.get('intent');\n  if (intent === 'delete') {\n    return handleDelete(request, id, userId);\n  }\n  if (intent === 'update') {\n    return handleUpdate(formData, id, userId);\n  }\n  if (intent === 'remove-attachment') {\n    return handleRemoveAttachment(formData, id, userId);\n  }\n  throw new Response('Bad request', {\n    status: 400\n  });\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const userId = await requireUserId(request);\n  const {\n    id\n  } = params;\n  if (!id) throw Error('id route parameter must be defined');\n  const expense = await db.expense.findUnique({\n    where: {\n      id_userId: {\n        id,\n        userId\n      }\n    }\n  });\n  if (!expense) throw new Response('Not found', {\n    status: 404\n  });\n  return json(expense);\n}\nexport default function Component() {\n  _s();\n  const expense = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state !== 'idle' && navigation.formAction === `/dashboard/expenses/${expense.id}?index`;\n  const actionData = useActionData();\n  const attachment = navigation.formData?.get('attachment');\n  const isUploadingAttachment = attachment instanceof File && attachment.name !== '';\n  const isRemovingAttachment = navigation.formData?.get('intent') === 'remove-attachment';\n  return <>\n      <Form method=\"POST\" action={`/dashboard/expenses/${expense.id}?index`} key={expense.id} encType=\"multipart/form-data\">\n        <Input label=\"Title:\" type=\"text\" name=\"title\" defaultValue={expense.title} required />\n        <Textarea label=\"Description:\" name=\"description\" defaultValue={expense.description || ''} />\n        <Input label=\"Amount (in USD):\" type=\"number\" defaultValue={expense.amount} name=\"amount\" required />\n        {(isUploadingAttachment || expense.attachment) && !isRemovingAttachment ? <Attachment label=\"Current Attachment\" attachmentUrl={`/dashboard/expenses/${expense.id}/attachments/${expense.attachment}`} disabled={isUploadingAttachment} /> : <Input label=\"New Attachment\" type=\"file\" name=\"attachment\" disabled={isSubmitting} />}\n        <Button type=\"submit\" name=\"intent\" value=\"update\" isPrimary>\n          Save\n        </Button>\n        <p aria-live=\"polite\" className=\"text-green-600\">\n          {actionData?.success && 'Changes saved!'}\n        </p>\n      </Form>\n      <FloatingActionLink to=\"/dashboard/expenses/\">Add expense</FloatingActionLink>\n    </>;\n}\n_s(Component, \"Dr68GZHXmwlXxs7JWYUts8CsS7I=\", false, function () {\n  return [useLoaderData, useNavigation, useActionData];\n});\n_c = Component;\nexport function ErrorBoundary() {\n  _s2();\n  const error = useRouteError();\n  const {\n    id\n  } = useParams();\n  let heading = 'Something went wrong';\n  let message = `Apologies, something went wrong on our end, please try again.`;\n  if (isRouteErrorResponse(error) && error.status === 404) {\n    heading = 'Expense not found';\n    message = `Apologies, the expense with the id ${id} cannot be found.`;\n  }\n  return <>\n      <div className=\"w-full m-auto lg:max-w-3xl flex flex-col items-center justify-center gap-5\">\n        <H2>{heading}</H2>\n        <p>{message}</p>\n      </div>\n      <FloatingActionLink to=\"/dashboard/expenses/\">Add expense</FloatingActionLink>\n    </>;\n}\n_s2(ErrorBoundary, \"IbF31mZw5Epu+ZGGuXMdxZE9OB0=\", false, function () {\n  return [useRouteError, useParams];\n});\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
