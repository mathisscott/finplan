{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.income.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.income.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.income.tsx\");\n  import.meta.hot.lastModified = \"1706322488000\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { Form, Outlet, useLoaderData, useLocation, useNavigation, useParams, useSearchParams } from '@remix-run/react';\nimport { clsx } from 'clsx';\nimport { SearchInput } from '~/components/forms';\nimport { H1 } from '~/components/headings';\nimport { ListLinkItem } from '~/components/links';\nimport { db } from '~/modules/db.server';\nimport { requireUserId } from '~/modules/session/session.server';\nexport async function loader({\n  request\n}) {\n  const userId = await requireUserId(request);\n  const url = new URL(request.url);\n  const searchString = url.searchParams.get('q');\n  const invoices = await db.invoice.findMany({\n    orderBy: {\n      createdAt: 'desc'\n    },\n    where: {\n      userId,\n      title: {\n        contains: searchString ? searchString : ''\n      }\n    }\n  });\n  return json(invoices);\n}\nexport default function Component() {\n  _s();\n  const navigation = useNavigation();\n  const invoices = useLoaderData();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get('q') || '';\n  return <div className=\"w-full\">\n      <H1>Your income</H1>\n      <div className=\"mt-10 w-full flex flex-col-reverse lg:flex-row\">\n        <section className=\"lg:p-8 w-full lg:max-w-2xl\">\n          <h2 className=\"sr-only\">All your income</h2>\n          <Form method=\"GET\" action={location.pathname}>\n            <SearchInput name=\"q\" type=\"search\" label=\"Search by title\" defaultValue={searchQuery} />\n          </Form>\n          <ul className=\"flex flex-col\">\n            {invoices.map(invoice => <ListLinkItem key={invoice.id} to={`/dashboard/income/${invoice.id}`} isActive={invoice.id === id} deleteProps={{\n            ariaLabel: `Delete invoice ${invoice.title}`,\n            action: `/dashboard/income/${invoice.id}?index`\n          }}>\n                <p>\n                  <i>{new Date(invoice.createdAt).toLocaleDateString('en-US')}</i>\n                </p>\n                <p className=\"text-xl font-semibold\">{invoice.title}</p>\n                <p>\n                  <b>\n                    {Intl.NumberFormat('en-US', {\n                  style: 'currency',\n                  currency: invoice.currencyCode\n                }).format(invoice.amount)}\n                  </b>\n                </p>\n              </ListLinkItem>)}\n          </ul>\n        </section>\n        <section className={clsx('lg:p-8 w-full', navigation.state === 'loading' && 'motion-safe:animate-pulse')}>\n          <Outlet />\n        </section>\n      </div>\n    </div>;\n}\n_s(Component, \"VB8t/bwxf8EfLo+OH6LZcEHhaUw=\", false, function () {\n  return [useNavigation, useLoaderData, useParams, useLocation, useSearchParams];\n});\n_c = Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
